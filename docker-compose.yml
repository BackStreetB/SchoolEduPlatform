version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: school_postgres
    environment:
      POSTGRES_DB: school_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - school_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Auth Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: school_auth_service
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=school_auth
      - DB_USER=postgres
      - DB_PASSWORD=password
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=1d
      - JWT_REFRESH_EXPIRES_IN=7d
      - GOOGLE_CLIENT_ID=your-google-client-id
      - GOOGLE_CLIENT_SECRET=your-google-client-secret
      - FRONTEND_URL=http://localhost:3000
      # Dev default: Mailpit container. Override in production with real SMTP
      - SMTP_HOST=${SMTP_HOST:-mailpit}
      - SMTP_PORT=${SMTP_PORT:-1025}
      - SMTP_SECURE=${SMTP_SECURE:-false}
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASS=${SMTP_PASS:-}
      - SMTP_FROM_NAME=${SMTP_FROM_NAME:-TVD School Platform}
      - SMTP_FROM_EMAIL=${SMTP_FROM_EMAIL:-no-reply@tvd.school}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - school_network
    volumes:
      - ./auth-service:/app

  # Report Service
  report-service:
    build:
      context: ./report-service
      dockerfile: Dockerfile
    container_name: school_report_service
    environment:
      - NODE_ENV=development
      - PORT=3002
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=school_reports
      - DB_USER=postgres
      - DB_PASSWORD=password
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - FRONTEND_URL=http://localhost:3000
      - STREAK_WARNING_HOURS=20
      - STREAK_RESET_HOURS=24
    ports:
      - "3002:3002"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - school_network
    volumes:
      - ./report-service:/app
      - /app/node_modules

  # Diary Service
  diary-service:
    build:
      context: ./diary-service
      dockerfile: Dockerfile
    container_name: school_diary_service
    environment:
      - NODE_ENV=development
      - PORT=3003
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=school_diary
      - DB_USER=postgres
      - DB_PASSWORD=password
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - FRONTEND_URL=http://localhost:3000
      - DIARY_LOCK_HOURS=24
    ports:
      - "3003:3003"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - school_network
    volumes:
      - ./diary-service:/app
      - /app/node_modules

  # Community Service
  community-service:
    build:
      context: ./community-service
      dockerfile: Dockerfile
    container_name: school_community_service
    environment:
      - NODE_ENV=development
      - PORT=3004
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=school_community
      - DB_USER=postgres
      - DB_PASSWORD=password
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - FRONTEND_URL=http://localhost:3000
      - UPLOAD_PATH=./uploads
      - MAX_FILE_SIZE=5242880
    ports:
      - "3004:3004"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - school_network
    volumes:
      - ./community-service:/app
      - /app/node_modules
      - community_uploads:/app/uploads

  # Event Service
  event-service:
    build:
      context: ./event-service
      dockerfile: Dockerfile
    container_name: school_event_service
    environment:
      - NODE_ENV=development
      - PORT=3005
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=school_events
      - DB_USER=postgres
      - DB_PASSWORD=password
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - FRONTEND_URL=http://localhost:3000
      - EVENT_REMINDER_MINUTES=15
    ports:
      - "3005:3005"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - school_network
    volumes:
      - ./event-service:/app
      - /app/node_modules

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: school_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:3001
      - REACT_APP_AUTH_SERVICE_URL=http://localhost:3001
      - REACT_APP_REPORT_SERVICE_URL=http://localhost:3002
      - REACT_APP_DIARY_SERVICE_URL=http://localhost:3003
      - REACT_APP_COMMUNITY_SERVICE_URL=http://localhost:3004
      - REACT_APP_EVENT_SERVICE_URL=http://localhost:3005
    ports:
      - "3000:80"
    depends_on:
      - auth-service
      - report-service
      - diary-service
      - community-service
      - event-service
    networks:
      - school_network
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Nginx Gateway (Optional)
  nginx:
    image: nginx:alpine
    container_name: school_nginx
    ports:
      - "80:80"
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth-service
      - report-service
      - diary-service
      - community-service
      - event-service
      - frontend
    networks:
      - school_network

  # Dev mail catcher (SMTP + Web UI)
  mailpit:
    image: axllent/mailpit:latest
    container_name: mailpit
    ports:
      - "1025:1025"   # SMTP
      - "8025:8025"   # Web UI
    networks:
      - school_network

  teacher-service:
    build: ./teacher-service
    container_name: school_teacher_service
    ports:
      - "3006:3006"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=school_teacher
      - DB_USER=postgres
      - DB_PASSWORD=password
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
    volumes:
      - ./teacher-service:/app
      - /app/node_modules
      - teacher_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - school_network

  # Online Class Service
  online-class-service:
    build:
      context: ./online-class-service
      dockerfile: Dockerfile
    container_name: school_online_class_service
    environment:
      - NODE_ENV=development
      - PORT=3007
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=school_online_class
      - DB_USER=postgres
      - DB_PASSWORD=password
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - FRONTEND_URL=http://localhost:3000
      - ZOOM_SDK_KEY=your_zoom_sdk_key
      - ZOOM_SDK_SECRET=your_zoom_sdk_secret
    ports:
      - "3007:3007"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - school_network
    volumes:
      - ./online-class-service:/app
      - /app/node_modules

volumes:
  postgres_data:
  community_uploads:
  teacher_uploads:

networks:
  school_network:
    driver: bridge 